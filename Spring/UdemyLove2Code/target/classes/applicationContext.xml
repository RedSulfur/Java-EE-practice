<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!--load the properties file: coaches.properties-->
    <context:property-placeholder location="coaches.properties"/>


    <!--
    id that your java application will use when it wants to retrieve a bean
    from the spring container

    Spring will construct your object and pass an appropriate data
    into the constructor
    -->
    <bean id="myFortuneService"
          class="com.love2code.springdemo.HappyFortuneService">
    </bean>
    <!--Spring is responsible for creating objects and injecting their dependencies-->
    <bean id="myCoach"
          class="com.love2code.springdemo.TrackCoach">
        <constructor-arg ref="myFortuneService"/>
    </bean>
    <!--<bean id="myCricketCoach"
          class="com.love2code.springdemo.CricketCoach">
          <property name="fortuneService" ref="myFortuneService" ></property>
          <property name="emailAddress" value="somevalue@gmail.com"></property>
          <property name="team" value="Team Sample"></property>
    </bean>-->
    <!--injected string parameters are being read from the properties file-->

    <bean id="myCricketCoach"
          class="com.love2code.springdemo.CricketCoach">
        <property name="fortuneService" ref="myFortuneService"/>
        <property name="emailAddress" value="${coach.email}"/>
        <property name="team" value="${coach.team}"/>
    </bean>


</beans>